From 9851d97d118a014c47a68a78b065d332c9e6beb2 Mon Sep 17 00:00:00 2001
From: John Crispin <john@phrozen.org>
Date: Sat, 24 Oct 2020 17:05:01 +0200
Subject: [PATCH 24/26] hostapd: add the TIP tweaks

Signed-off-by: John Crispin <john@phrozen.org>
---
 .../hostapd/files/hostapd-full.config         |  4 +-
 .../network/services/hostapd/files/hostapd.sh | 18 ++++-
 .../network/services/hostapd/files/wpad.init  |  4 +-
 ..._request-ignore-when-rssi-is-too-low.patch | 68 +++++++++++++++++++
 4 files changed, 88 insertions(+), 6 deletions(-)
 create mode 100644 package/network/services/hostapd/patches/800-probe_request-ignore-when-rssi-is-too-low.patch

diff --git a/package/network/services/hostapd/files/hostapd-full.config b/package/network/services/hostapd/files/hostapd-full.config
index fee4479dfa..d99e3de816 100644
--- a/package/network/services/hostapd/files/hostapd-full.config
+++ b/package/network/services/hostapd/files/hostapd-full.config
@@ -371,9 +371,9 @@ CONFIG_INTERWORKING=y
 CONFIG_TAXONOMY=y
 
 # Fast Initial Link Setup (FILS) (IEEE 802.11ai)
-#CONFIG_FILS=y
+CONFIG_FILS=y
 # FILS shared key authentication with PFS
-#CONFIG_FILS_SK_PFS=y
+CONFIG_FILS_SK_PFS=y
 
 # Include internal line edit mode in hostapd_cli. This can be used to provide
 # limited command line editing and history support.
diff --git a/package/network/services/hostapd/files/hostapd.sh b/package/network/services/hostapd/files/hostapd.sh
index cb7e1d7053..559fb90516 100644
--- a/package/network/services/hostapd/files/hostapd.sh
+++ b/package/network/services/hostapd/files/hostapd.sh
@@ -45,6 +45,7 @@ hostapd_append_wpa_key_mgmt() {
 			append wpa_key_mgmt "WPA-$auth_type_l"
 			[ "${ieee80211r:-0}" -gt 0 ] && append wpa_key_mgmt "FT-${auth_type_l}"
 			[ "${ieee80211w:-0}" -gt 0 ] && append wpa_key_mgmt "WPA-${auth_type_l}-SHA256"
+			[ "${ieee80211ai:-0}" -gt 0 ] && append wpa_key_mgmt "FILS-SHA256"
 		;;
 		eap192)
 			append wpa_key_mgmt "WPA-EAP-SUITE-B-192"
@@ -198,6 +199,7 @@ hostapd_common_add_bss_config() {
 
 	config_add_boolean rsn_preauth auth_cache
 	config_add_int ieee80211w
+	config_add_int ieee80211ai
 	config_add_int eapol_version
 
 	config_add_string 'auth_server:host' 'server:host'
@@ -275,6 +277,10 @@ hostapd_common_add_bss_config() {
 	config_add_string iw_hessid iw_network_auth_type iw_qos_map_set
 	config_add_array iw_roaming_consortium iw_domain_name iw_anqp_3gpp_cell_net iw_nai_realm
 	config_add_array iw_anqp_elem
+	
+	config_add_int beacon_rate
+	config_add_int rssi_reject_assoc_rssi
+	config_add_int rssi_ignore_probe_request
 
 	config_add_boolean hs20 disable_dgaf osen
 	config_add_int anqp_domain_id
@@ -286,6 +292,7 @@ hostapd_common_add_bss_config() {
 	config_add_string osu_ssid hs20_wan_metrics hs20_operating_class hs20_t_c_filename hs20_t_c_timestamp
 
 	config_add_int airtime_bss_weight airtime_bss_limit
+	config_add_int rts_threshold
 }
 
 hostapd_set_vlan_file() {
@@ -426,11 +433,12 @@ hostapd_set_bss_options() {
 		wps_pushbutton wps_label ext_registrar wps_pbc_in_m1 wps_ap_setup_locked \
 		wps_independent wps_device_type wps_device_name wps_manufacturer wps_pin \
 		macfilter ssid utf8_ssid wmm uapsd hidden short_preamble rsn_preauth \
-		iapp_interface eapol_version dynamic_vlan ieee80211w nasid \
+		iapp_interface eapol_version dynamic_vlan ieee80211w ieee80211ai nasid \
 		acct_server acct_secret acct_port acct_interval \
 		bss_load_update_period chan_util_avg_period sae_require_mfp \
 		multi_ap multi_ap_backhaul_ssid multi_ap_backhaul_key \
-		airtime_bss_weight airtime_bss_limit
+		airtime_bss_weight airtime_bss_limit \
+		rssi_reject_assoc_rssi rssi_ignore_probe_request rts_threshold 
 
 	set_default isolate 0
 	set_default maxassoc 0
@@ -450,6 +458,9 @@ hostapd_set_bss_options() {
 	set_default multi_ap 0
 	set_default airtime_bss_weight 0
 	set_default airtime_bss_limit 0
+	set_default rssi_reject_assoc_rssi 0
+	set_default rssi_ignore_probe_request 0
+	set_default rts_threshold -1
 
 	append bss_conf "ctrl_interface=/var/run/hostapd"
 	if [ "$isolate" -gt 0 ]; then
@@ -474,6 +485,9 @@ hostapd_set_bss_options() {
 	append bss_conf "uapsd_advertisement_enabled=$uapsd" "$N"
 	append bss_conf "utf8_ssid=$utf8_ssid" "$N"
 	append bss_conf "multi_ap=$multi_ap" "$N"
+	append bss_conf "rssi_reject_assoc_rssi=$rssi_reject_assoc_rssi" "$N"
+	append bss_conf "rssi_ignore_probe_request=$rssi_ignore_probe_request" "$N"
+	append bss_conf "rts_threshold=$rts_threshold" "$N"
 
 	[ "$tdls_prohibit" -gt 0 ] && append bss_conf "tdls_prohibit=$tdls_prohibit" "$N"
 
diff --git a/package/network/services/hostapd/files/wpad.init b/package/network/services/hostapd/files/wpad.init
index 3198e9801f..e2cd380cb5 100644
--- a/package/network/services/hostapd/files/wpad.init
+++ b/package/network/services/hostapd/files/wpad.init
@@ -11,7 +11,7 @@ start_service() {
 		mkdir -p /var/run/hostapd
 		procd_open_instance hostapd
 		procd_set_param command /usr/sbin/hostapd -s -g /var/run/hostapd/global
-		procd_set_param respawn
+		procd_set_param respawn 3600 5 0
 		procd_close_instance
 	fi
 
@@ -19,7 +19,7 @@ start_service() {
 		mkdir -p /var/run/wpa_supplicant
 		procd_open_instance supplicant
 		procd_set_param command /usr/sbin/wpa_supplicant -n -s -g /var/run/wpa_supplicant/global
-		procd_set_param respawn
+		procd_set_param respawn 3600 5 0
 		procd_close_instance
 	fi
 }
diff --git a/package/network/services/hostapd/patches/800-probe_request-ignore-when-rssi-is-too-low.patch b/package/network/services/hostapd/patches/800-probe_request-ignore-when-rssi-is-too-low.patch
new file mode 100644
index 0000000000..182a3bb866
--- /dev/null
+++ b/package/network/services/hostapd/patches/800-probe_request-ignore-when-rssi-is-too-low.patch
@@ -0,0 +1,68 @@
+From e15b04870a7d7517a9b129d8d5cbebe6b8a25cb8 Mon Sep 17 00:00:00 2001
+From: John Crispin <john@phrozen.org>
+Date: Wed, 29 Jul 2020 17:38:15 +0200
+Subject: [PATCH 1/2] probe_request: ignore when rssi is too low
+
+Signed-off-by: John Crispin <john@phrozen.org>
+---
+ hostapd/config_file.c | 2 ++
+ src/ap/ap_config.c    | 1 +
+ src/ap/ap_config.h    | 1 +
+ src/ap/beacon.c       | 4 ++++
+ 4 files changed, 8 insertions(+)
+
+diff --git a/hostapd/config_file.c b/hostapd/config_file.c
+index 13396aad2..e0b182c8e 100644
+--- a/hostapd/config_file.c
++++ b/hostapd/config_file.c
+@@ -4454,6 +4454,8 @@ static int hostapd_config_fill(struct hostapd_config *conf,
+ 		conf->rssi_reject_assoc_rssi = atoi(pos);
+ 	} else if (os_strcmp(buf, "rssi_reject_assoc_timeout") == 0) {
+ 		conf->rssi_reject_assoc_timeout = atoi(pos);
++	} else if (os_strcmp(buf, "rssi_ignore_probe_request") == 0) {
++		conf->rssi_ignore_probe_request = atoi(pos);
+ 	} else if (os_strcmp(buf, "pbss") == 0) {
+ 		bss->pbss = atoi(pos);
+ 	} else if (os_strcmp(buf, "transition_disable") == 0) {
+diff --git a/src/ap/ap_config.c b/src/ap/ap_config.c
+index 56a4ac388..088bb831a 100644
+--- a/src/ap/ap_config.c
++++ b/src/ap/ap_config.c
+@@ -277,6 +277,7 @@ struct hostapd_config * hostapd_config_defaults(void)
+ 
+ 	conf->rssi_reject_assoc_rssi = 0;
+ 	conf->rssi_reject_assoc_timeout = 30;
++	conf->rssi_ignore_probe_request = 0;
+ 
+ #ifdef CONFIG_AIRTIME_POLICY
+ 	conf->airtime_update_interval = AIRTIME_DEFAULT_UPDATE_INTERVAL;
+diff --git a/src/ap/ap_config.h b/src/ap/ap_config.h
+index 7fe418363..a69a8d324 100644
+--- a/src/ap/ap_config.h
++++ b/src/ap/ap_config.h
+@@ -1042,6 +1042,7 @@ struct hostapd_config {
+ 
+ 	int rssi_reject_assoc_rssi;
+ 	int rssi_reject_assoc_timeout;
++	int rssi_ignore_probe_request;
+ 
+ #ifdef CONFIG_AIRTIME_POLICY
+ 	enum {
+diff --git a/src/ap/beacon.c b/src/ap/beacon.c
+index ffb2e04d1..21fe04c2f 100644
+--- a/src/ap/beacon.c
++++ b/src/ap/beacon.c
+@@ -829,6 +829,10 @@ void handle_probe_req(struct hostapd_data *hapd,
+ 	struct radius_sta rad_info;
+ 	struct hostapd_data *resp_bss = hapd;
+ 
++	if (hapd->iconf->rssi_ignore_probe_request && ssi_signal &&
++	    ssi_signal < hapd->iconf->rssi_ignore_probe_request)
++		return;
++
+ 	if (len < IEEE80211_HDRLEN)
+ 		return;
+ 	ie = ((const u8 *) mgmt) + IEEE80211_HDRLEN;
+-- 
+2.25.1
+
-- 
2.25.1

