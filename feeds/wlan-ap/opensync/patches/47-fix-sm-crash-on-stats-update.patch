--- a/src/sm/src/sm_scan_schedule.c
+++ b/src/sm/src/sm_scan_schedule.c
@@ -130,6 +130,9 @@ bool sm_scan_schedule_cb (
 {
     bool                            rc;
     sm_scan_ctx_t                  *scan_ctx = NULL;
+    sm_scan_ctx_t                  *scan_ctx_queue = NULL;
+    ds_dlist_iter_t                 queue_iter;
+    bool scan_ctx_exists = false;
 
     scan_schedule_timeout_timer_set(&g_scan_schedule_timer, false);
 
@@ -142,41 +145,59 @@ bool sm_scan_schedule_cb (
     scan_ctx = (sm_scan_ctx_t *) ctx;
 
 clean:
-    /* Notify upper layer about scan status */
-    if (scan_ctx->scan_request.scan_cb)
-    {
-        scan_ctx->scan_request.scan_cb(scan_ctx->scan_request.scan_ctx, scan_status);
-    }
-
-    // Something went wrong, clean pending requests and exit
-    if (!scan_status) {
-        return sm_scan_schedule_queue_flush();
+    /* Process only if scan queue exists, thereby avoiding double free in case
+     * the queue is just flushed by any of the other callbacks.
+     */
+    if (!ds_dlist_is_empty(&g_scan_ctx_list)) {
+        for (scan_ctx_queue = ds_dlist_ifirst(&queue_iter, &g_scan_ctx_list);
+             scan_ctx_queue != NULL;
+             scan_ctx_queue = ds_dlist_inext(&queue_iter)) {
+            if (scan_ctx == scan_ctx_queue) {
+	            scan_ctx_exists = true;
+	            break;
+            }
+        }
     }
 
-    /* Remove processed context */
-    ds_dlist_remove_head(&g_scan_ctx_list);
-    if (scan_ctx) {
-	LOG(DEBUG, "sm_scan_schedule_cb. Scan done. Deleting scan_ctx. %p. %s %s %d\n",
-		scan_ctx,
-		radio_get_name_from_type(scan_ctx->scan_request.radio_cfg->type),
-		radio_get_scan_name_from_type(scan_ctx->scan_request.scan_type),
-		scan_ctx->scan_request.chan_list[0]);
+    if (scan_ctx_exists) {
+        /* Notify upper layer about scan status */
+        if (scan_ctx->scan_request.scan_cb) {
+            LOG(DEBUG, "Calling scan_cb %s scan status %d\n", __func__, scan_status);
+            scan_ctx->scan_request.scan_cb(scan_ctx->scan_request.scan_ctx, scan_status);
+        }
+
+        /* Something went wrong, clean pending requests and exit */
+        if (!scan_status) {
+            LOG(DEBUG, "Scan trigger failed. Flushing the scan request queue. scan_ctx. %p. %s %s %d\n",
+                scan_ctx,
+                radio_get_name_from_type(scan_ctx->scan_request.radio_cfg->type),
+                radio_get_scan_name_from_type(scan_ctx->scan_request.scan_type),
+                scan_ctx->scan_request.chan_list[0]);
+            return sm_scan_schedule_queue_flush();
+        }
+
+        /* Remove processed context */
+        LOG(DEBUG, "sm_scan_schedule_cb. Scan done. Deleting scan_ctx. %p. %s %s %d\n",
+            scan_ctx,
+            radio_get_name_from_type(scan_ctx->scan_request.radio_cfg->type),
+            radio_get_scan_name_from_type(scan_ctx->scan_request.scan_type),
+            scan_ctx->scan_request.chan_list[0]);
+        ds_dlist_iremove(&queue_iter);
+        sm_scan_ctx_free(scan_ctx);
+        scan_ctx = NULL;
     }
 
-    sm_scan_ctx_free(scan_ctx);
-    scan_ctx = NULL;
-
     /* Check for waiting scan requests an schedule next in line */
     scan_ctx = ds_dlist_head(&g_scan_ctx_list);
     if (scan_ctx)
     {
         scan_status = true;
 
-	LOG(DEBUG, "sm_scan_schedule_cb. Schedule next scan request. %p. %s %s %d\n",
-		scan_ctx,
-		radio_get_name_from_type(scan_ctx->scan_request.radio_cfg->type),
-		radio_get_scan_name_from_type(scan_ctx->scan_request.scan_type),
-		scan_ctx->scan_request.chan_list[0]);
+    LOG(DEBUG, "sm_scan_schedule_cb. Schedule next scan request. %p. %s %s %d\n",
+        scan_ctx,
+        radio_get_name_from_type(scan_ctx->scan_request.radio_cfg->type),
+        radio_get_scan_name_from_type(scan_ctx->scan_request.scan_type),
+        scan_ctx->scan_request.chan_list[0]);
 
         rc =
             sm_scan_schedule_process (
